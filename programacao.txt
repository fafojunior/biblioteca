create table Usuario(
idusuario smallint	NOT NULL,
nome varchar(45) NOT NULL,
cpf varchar(12) NOT NULL,
sexo varchar(1) NOT NULL,
email varchar(45) NULL,
rua varchar(45) NOT NULL,
bairro varchar(45) NOT NULL,
municipio varchar(45) NOT NULL,
estado varchar(45) NOT NULL,
idmatrimonio smallint NULL,
casado varchar(5) NOT NULL,
nome_matrimonio varchar(45) NULL,
CONSTRAINT PK_usuario PRIMARY KEY (idusuario),
CONSTRAINT AK_usuario_nome UNIQUE (nome), 
CONSTRAINT CK_usuario_sexo CHECK ( sexo IN ('M','F' )), 
CONSTRAINT AK_usuario_cpf UNIQUE (cpf),
CONSTRAINT FK_matrimonio FOREIGN KEY (idusuario) REFERENCES Usuario,
CONSTRAINT CK_usuario_casado CHECK ( casado IN ('S','N'))
)

create table Computador(
idcomputador smallint NOT NULL,
cod_pc int NOT NULL,
CONSTRAINT PK_computador PRIMARY KEY (idcomputador),
CONSTRAINT AK_cod_pc UNIQUE(idcomputador)
)

create table Usa(
idusuario smallint NOT NULL,
idcomputador smallint NOT NULL,
hora_ent time NOT NULL,
hora_sai time NOT NULL,

CONSTRAINT FK_usa_usuario FOREIGN KEY (idusuario) REFERENCES usuario,
CONSTRAINT FK_usa_computador FOREIGN KEY (idcomputador) REFERENCES computador
)

create table Funcionario(
idfuncionario smallint	NOT NULL,
nome varchar(45) NOT NULL,
cpf varchar(12) NOT NULL,
sexo varchar(1) NOT NULL,
email varchar(45) NULL,
rua varchar(45) NOT NULL,
bairro varchar(45) NOT NULL,
municipio varchar(45) NOT NULL,
estado varchar(45) NOT NULL,                              
CONSTRAINT PK_funcionario PRIMARY KEY (idfuncionario),
CONSTRAINT AK_funcionarioo_nome UNIQUE (nome), 
CONSTRAINT CK_funcionario_sexo CHECK ( sexo IN ('M','F' )) ,
CONSTRAINT AK_funcionario_cpf UNIQUE (cpf),
)

create table Item(
iditem smallint	NOT NULL,
quantidade int NOT NULL,
CONSTRAINT PK_Item PRIMARY KEY (iditem)
)

create table Aluga(
idusuario smallint	NOT NULL,
iditem smallint NOT NULL,
idfuncionario smallint	NOT NULL,
data_entrega date NOT NULL,
data_devolucao date NOT NULL,
CONSTRAINT FK_funcionario FOREIGN KEY (idfuncionario) REFERENCEs funcionario,
CONSTRAINT PK_FK_Item FOREIGN KEY (iditem) REFERENCES item,
CONSTRAINT FK_usuario FOREIGN KEY (idusuario) REFERENCES usuario)


create table Acervo(
idacervo smallint NOT NULL,
codigo varchar(20) NOT NULL,
titulo varchar(45) NOT NULL,
CONSTRAINT PK_acervo PRIMARY KEY (idacervo),
CONSTRAINT AK_codigo UNIQUE (codigo)
)

create table Livro(
idacervo smallint NOT NULL,
editora varchar(45) NOT NULL,
autor varchar(45) NOT NULL,
CONSTRAINT FK_acervo FOREIGN KEY (idacervo) REFERENCES acervo)

create table Disco(
idacervo smallint NOT NULL,
artista varchar(45) NOT NULL,
estilo varchar(45) NULL,
CONSTRAINT FK_acervo_disco FOREIGN KEY (idacervo) REFERENCES acervo)

create table Reserva(
idacervo smallint NOT NULL,
idusuario smallint NOT NULL,
data_res date NOT NULL,
CONSTRAINT FK_usuario_reserva FOREIGN KEY (idusuario) REFERENCES usuario,
CONSTRAINT FK_acervo_reserva FOREIGN KEY (idacervo) REFERENCES acervo
)

create table sessao(
idsessao smallint NOT NULL,
nome varchar(45) NOT NULL,
codigo varchar(45) NOT NULL,
CONSTRAINT PK_codigo PRIMARY KEY (idsessao),
CONSTRAINT AK_codigo_Sessao UNIQUE (codigo)
)


 create table contem(
 iditem smallint	NOT NULL,
 idacervo smallint NOT NULL,
 idsessao smallint NOT NULL,
 CONSTRAINT FK_Item_contem FOREIGN KEY (iditem) REFERENCES item,
 CONSTRAINT FK_acervo_contem FOREIGN KEY (idacervo) REFERENCES acervo,
 CONSTRAINT FK_sessao_contem FOREIGN KEY (idsessao) REFERENCES sessao
 )


create table Fone(
idusuario smallint NULL,
idfuncionario smallint NULL,
ddd int NULL,
numero int NULL,
CONSTRAINT FK_usuario_fone FOREIGN KEY(idusuario) REFERENCES usuario,
CONSTRAINT FK_funcionario_fone FOREIGN KEY(idfuncionario) REFERENCES funcionario
)

create table Dependente(
iddependente smallint NOT NULL,
grau varchar(45) NOT NULL,
nome varchar(45) NULL,
idfuncionario smallint NOT NULL,
CONSTRAINT PK_dependente PRIMARY KEY (iddependente),
CONSTRAINT FK_funcionario_dependente FOREIGN KEY (idfuncionario) REFERENCES funcionario
)